/topic/573298hsdufhs
    优点：
        路由友好
        利于SEO，即搜索引擎更喜欢这一种
        SPA(单页面应用)

/topic?id=423kk
    优点：
        灵活

/topic/:id/:name/:age ===> 都得有
/topic/?a=xxx&b=xxx ===>可省略

模块化
    所有语言都有模块化系统（除了js）
        1、前端模块化
            传统模块化 requirejs AMD&&CMD 和 seajs(官网都没了，很老的一个东西)
                命名空间 --- 你在这个空间写的变量都不是全局变量 (避免不同模块的变量冲突)
                CMD --- 公共模块定义（同步的）
                AMD --- 异步模块定义(异步的)
            现代模块化
                veu angular react(天生自带模块化，不用别人支持)

                现在模块化的玩法依靠 webpack ===> 最底层 CMD
                    ---同等体积下，把多个文件打包为一个文件



渲染 ：分为两种 ===> 渲染和数据在一起
    -->1、后台渲染
        优点：
            1、稳定(数据)、
            2、安全(不会导致数据泄露)，
            3、利于SEO(优化)(百度喜欢[中国最大搜索引擎头子])
            4、体积大(页面整个渲染完毕发送给前台)
    -->2、前台渲染
            1、不那么稳定
            2、体积小 (后台只给你数据就行)
            3、不那么安全，没处理好会造成数据泄露
            4、灵活，用户体验好
                ===>前台删除一条数据非常简单，后端删除需要重新传一次前台
        

        后台渲染加载页面速度更快些
            只要不是有太多太多的div，就不会有太大的区别
        服务端渲染的框架简直是===>多如牛毛

        pug  破坏式--->破坏HTML
            1、html 就代表一个标签
            2、缩进控制层级（不能随便进行缩进，因为它会根据缩进进行嵌套）
        ejs  非破坏式 --->保留HTML解构